<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <artifactId>zuul-server</artifactId>
    <version>PACKT-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>zuul-server</name>
    <description>zuul server for Spring Cloud</description>

    <parent>
        <artifactId>microservice-center</artifactId>
        <groupId>tuacy.microservice.center</groupId>
        <version>PACKT-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <properties>
        <!-- For Docker hub leave empty; use "localhost:5000/" for a local Docker Registry -->
        <docker.registry.name>192.168.13.98:5000/</docker.registry.name>
        <docker.repository.name>${docker.registry.name}/${project.artifactId}</docker.repository.name>
        <docker.host.address>192.168.13.98</docker.host.address>
        <docker.port>8090</docker.port>
    </properties>

    <dependencies>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-zuul</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.retry</groupId>
            <artifactId>spring-retry</artifactId>
        </dependency>

    </dependencies>

    <profiles>
        <profile>
            <id>docker</id>
            <properties>
                <spring.profiles.active>docker</spring.profiles.active>
            </properties>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.jolokia</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.13.7</version>
                <configuration>
                    <!--<dockerHost>https://localhost:2376</dockerHost>
                    <certPath>src/main/dockerCerts</certPath>
                    <useColor>true</useColor>-->
                    <images>
                        <image>
                            <name>${docker.repository.name}:${project.version}</name>
                            <alias>${project.artifactId}</alias>

                            <build>
                                <from>anapsix/alpine-java</from>
                                <maintainer>Jerome Loisel</maintainer>
                                <assembly>
                                    <descriptor>docker-assembly.xml</descriptor>
                                </assembly>
                                <ports>
                                    <port>2225</port>
                                </ports>
                                <cmd>
                                    <shell>java -jar \
                                        /maven/${project.build.finalName}.jar server \
                                        /maven/docker-config.yml</shell>
                                </cmd>
                            </build>
                            <run>
                                <namingStrategy>alias</namingStrategy>
                                <ports>
                                    <port>${docker.port}:2225</port>
                                </ports>
                                <volumes>
                                    <bind>
                                        <volume>${user.home}/logs:/logs</volume>
                                    </bind>
                                </volumes>
                                <!--
                                <wait>
                                    <url>http://${docker.host.address}:${docker.port}/v1/user/1</url>
                                    <time>100000</time>
                                </wait>-->
                                <log>
                                    <prefix>${project.artifactId}</prefix>
                                    <color>cyan</color>
                                </log>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>